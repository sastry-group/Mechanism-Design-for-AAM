# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and upload Python Packages

# on: [push]
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  buildsrc:
    name: Build source package
    runs-on: ubuntu-latest
    needs: createrelease
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy
    - name: Build source package with setuptools
      run: python setup.py sdist

    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
        value=`ls dist`
        echo ::set-output name=file_name::$value
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ steps.get_release_info.outputs.file_name }}
        asset_name: ${{ steps.get_release_info.outputs.file_name }}
        asset_content_type: application/gzip
    - name: Store the source package
      uses: actions/upload-artifact@v2
      with:
        name: python-package-distributions
        path: dist

  buildbin:
    name: Build binary packages
    needs: createrelease

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        include:
          - os: ubuntu-latest
            TARGET: ubuntu
          - os: macos-latest
            TARGET: macos
          - os: windows-latest
            TARGET: windows

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy wheel
    - name: Build wheel with setuptools for ${{matrix.TARGET}}
      run: python setup.py bdist_wheel

    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
        value=`ls dist`
        echo ::set-output name=file_name::$value
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ steps.get_release_info.outputs.file_name }}
        asset_name: ${{ steps.get_release_info.outputs.file_name }}
        asset_content_type: application/zip
    - name: Store the binary wheel
      uses: actions/upload-artifact@v2
      with:
        name: python-package-distributions
        path: dist

  upload_pypi:
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: python-package-distributions
        path: dist
    - name: Publish pypi packages
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_BLUESKY }}
